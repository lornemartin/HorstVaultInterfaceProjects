using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace ItemExport
{
    public partial class HorstMFGExport : Form
    {
        public string orderNumber = "";
        public int quantity = 0;

        public HorstMFGExport()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext

            //ItemExport.HorstMFGEntities dbContext = new ItemExport.HorstMFGEntities();
            HorstMFGEntities dbContext = new HorstMFGEntities(HorstMFGEntities.GetEntityConnectionString(@"data source=(localdb)\MSSQLLocalDB;attachdbfilename=C:\Users\lorne\source\repos\HorstMFG2\HorstMFG\App_Data\HorstMFG2.mdf;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework"));

            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.Products.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                productsBindingSource.DataSource = dbContext.Products.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        public HorstMFGExport(List <Product> productList)
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            ItemExport.HorstMFGEntities dbContext = new ItemExport.HorstMFGEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.Products.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                productsBindingSource.DataSource = dbContext.Products.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());


            //gridView1.Columns.Clear();
            gridView1.BeginDataUpdate();
            gridControl1.DataSource = null;
            gridControl1.DataSource = productList;
            gridView1.EndDataUpdate();


        }

        private void HorstMFGExport_Load(object sender, EventArgs e)
        {
            btnExport.Enabled = false;
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            if (this.txtBoxOrderNumber.Text == "") btnExport.Enabled = false;
            else
            {
                orderNumber = txtBoxOrderNumber.Text;
                btnExport.Enabled = true;
            }
        }

        private void btnExport_Click(object sender, EventArgs e)
        {
            DialogResult = DialogResult.OK;
            if (txtBoxQty.Text != "")
                quantity = int.Parse(txtBoxQty.Text);

        }
    }
}
